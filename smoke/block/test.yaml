---
test:
  a.rb:
    diagnostics:
    - |
      a.rb:8:0: [error] IncompatibleAssignment: lhs_type=::String, rhs_type=::Integer (s = a.foo)
      │   ::Integer <: ::String
      │    ::Numeric <: ::String
      │     ::Object <: ::String
      │      ::BasicObject <: ::String
      │ ==> ::BasicObject <: ::String does not hold
      │
      └ s = a.foo
        ~~~~~~~~~
    - |
      a.rb:10:0: [error] IncompatibleAssignment: lhs_type=::Integer, rhs_type=::String (i = a.foo { nil })
      │   ::String <: ::Integer
      │    ::Object <: ::Integer
      │     ::BasicObject <: ::Integer
      │ ==> ::BasicObject <: ::Integer does not hold
      │
      └ i = a.foo { nil }
        ~~~~~~~~~~~~~~~~~
  b.rb:
    diagnostics:
    - |
      b.rb:5:2: [error] BreakTypeMismatch: expected=::Symbol, actual=::Integer (break 3)
      │   ::Integer <: ::Symbol
      │    ::Numeric <: ::Symbol
      │     ::Object <: ::Symbol
      │      ::BasicObject <: ::Symbol
      │ ==> ::BasicObject <: ::Symbol does not hold
      │
      └   break 3
          ~~~~~~~
    - |
      b.rb:10:0: [error] IncompatibleAssignment: lhs_type=::String, rhs_type=(::Integer | ::Symbol) (s = a.bar do |x|)
      │   (::Integer | ::Symbol) <: ::String
      │    ::Integer <: ::String
      │     ::Numeric <: ::String
      │      ::Object <: ::String
      │       ::BasicObject <: ::String
      │ ==> ::BasicObject <: ::String does not hold
      │
      └ s = a.bar do |x|
        ~~~~~~~~~~~~~~~~
  c.rb:
    diagnostics: []
  d.rb:
    diagnostics:
    - |
      d.rb:6:0: [error] IncompatibleAssignment: lhs_type=::Array[::Float], rhs_type=::Array[::String] (b = [1,2,3].map(&a))
      │   ::Array[::String] <: ::Array[::Float]
      │    ::String <: ::Float
      │     ::Object <: ::Float
      │      ::BasicObject <: ::Float
      │ ==> ::BasicObject <: ::Float does not hold
      │
      └ b = [1,2,3].map(&a)
        ~~~~~~~~~~~~~~~~~~~
    - |
      d.rb:8:0: [error] IncompatibleAssignment: lhs_type=::Array[::Float], rhs_type=::Array[::String] (b = [1,2,3].map(&:to_s))
      │   ::Array[::String] <: ::Array[::Float]
      │    ::String <: ::Float
      │     ::Object <: ::Float
      │      ::BasicObject <: ::Float
      │ ==> ::BasicObject <: ::Float does not hold
      │
      └ b = [1,2,3].map(&:to_s)
        ~~~~~~~~~~~~~~~~~~~~~~~
    - |
      d.rb:10:0: [error] UnresolvedOverloading: receiver=::Array[::Integer], method_name=map, method_types=[U] () { (::Integer) -> U } -> ::Array[U] | () -> ::Enumerator[::Integer, ::Array[untyped]] ([1,2,3].map(&:no_such_method))
      │
      └ [1,2,3].map(&:no_such_method)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    - |
      d.rb:11:0: [error] UnresolvedOverloading: receiver=::Array[::Integer], method_name=map, method_types=[U] () { (::Integer) -> U } -> ::Array[U] | () -> ::Enumerator[::Integer, ::Array[untyped]] ([1,2,3].map(&:divmod))
      │
      └ [1,2,3].map(&:divmod)
        ~~~~~~~~~~~~~~~~~~~~~
