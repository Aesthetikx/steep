---
test:
  a.rb:
    diagnostics:
    - |
      a.rb:6:2: [error] Cannot assign a value of type `::Integer` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::Integer <: ::Hash[::Symbol, ::String]
      │     ::Numeric <: ::Hash[::Symbol, ::String]
      │       ::Object <: ::Hash[::Symbol, ::String]
      │         ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └   hash = x
          ~~~~~~~~
    - |
      a.rb:7:2: [error] Cannot assign a value of type `::String` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::String <: ::Hash[::Symbol, ::String]
      │     ::Object <: ::Hash[::Symbol, ::String]
      │       ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └   hash = y
          ~~~~~~~~
    - |
      a.rb:5:0: [error] Cannot assign a value of type `::String` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::String <: ::Hash[::Symbol, ::String]
      │     ::Object <: ::Hash[::Symbol, ::String]
      │       ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └ hash = a.each.with_object("") do |x, y|
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    - |
      a.rb:11:2: [error] Cannot assign a value of type `::Integer` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::Integer <: ::Hash[::Symbol, ::String]
      │     ::Numeric <: ::Hash[::Symbol, ::String]
      │       ::Object <: ::Hash[::Symbol, ::String]
      │         ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └   hash = x
          ~~~~~~~~
    - |
      a.rb:12:2: [error] Cannot assign a value of type `::Integer` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::Integer <: ::Hash[::Symbol, ::String]
      │     ::Numeric <: ::Hash[::Symbol, ::String]
      │       ::Object <: ::Hash[::Symbol, ::String]
      │         ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └   hash = y
          ~~~~~~~~
    - |
      a.rb:10:0: [error] Cannot assign a value of type `::Array[::Integer]` to a variable of type `::Hash[::Symbol, ::String]`
      │   ::Array[::Integer] <: ::Hash[::Symbol, ::String]
      │     ::Object <: ::Hash[::Symbol, ::String]
      │       ::BasicObject <: ::Hash[::Symbol, ::String]
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └ hash = a.each.with_index do |x, y|
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  b.rb:
    diagnostics:
    - |
      b.rb:6:4: [error] Cannot find compatible overloading of method `with_object` of type `::Enumerator[::Integer, ::Array[::Integer]]`
      │ Method types:
      │   def with_object: [U] (U) { (::Integer, U) -> untyped } -> U
      │                  | [U] (U) -> ::Enumerator[[::Integer, U], ::Array[::Integer]]
      │
      │ Diagnostic ID: Ruby::UnresolvedOverloading
      │
      └ b = a.each.with_object([]) do |i, xs|
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    - |
      b.rb:11:0: [error] Cannot assign a value of type `::Array[::String]` to a variable of type `::Array[::Integer]`
      │   ::Array[::String] <: ::Array[::Integer]
      │     ::String <: ::Integer
      │       ::Object <: ::Integer
      │         ::BasicObject <: ::Integer
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └ c = a.each.with_object([]) do |i, xs|
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    - |
      b.rb:17:0: [error] Cannot assign a value of type `::Array[untyped]` to a variable of type `::String`
      │   ::Array[untyped] <: ::String
      │     ::Object <: ::String
      │       ::BasicObject <: ::String
      │
      │ Diagnostic ID: Ruby::IncompatibleAssignment
      │
      └ d = a.each.with_object([]) do |i, xs|
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
