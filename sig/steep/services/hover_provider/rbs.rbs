module Steep
  module Services
    module HoverProvider
      class RBS
        class TypeAliasContent
          attr_reader location: ::RBS::Location[untyped, untyped]

          attr_reader decl: ::RBS::AST::Declarations::TypeAlias

          def initialize: (location: ::RBS::Location[untyped, untyped], decl: ::RBS::AST::Declarations::TypeAlias) -> void
        end

        class ClassContent
          attr_reader location: ::RBS::Location[untyped, untyped]

          type decl = ::RBS::AST::Declarations::Class | ::RBS::AST::Declarations::Module | ::RBS::AST::Declarations::ClassAlias | ::RBS::AST::Declarations::ModuleAlias

          attr_reader decl: decl

          def initialize: (location: ::RBS::Location[untyped, untyped], decl: decl) -> void
        end

        class InterfaceContent
          attr_reader location: ::RBS::Location[untyped, untyped]

          attr_reader decl: ::RBS::AST::Declarations::Interface

          def initialize: (location: ::RBS::Location[untyped, untyped], decl: ::RBS::AST::Declarations::Interface) -> void
        end

        type content = TypeAliasContent | ClassContent | InterfaceContent

        attr_reader service: TypeCheckService

        def initialize: (service: TypeCheckService) -> void

        def project: () -> Project

        def content_for: (target: Project::Target, path: Pathname, line: Integer, column: Integer) -> content?
      end
    end
  end
end
