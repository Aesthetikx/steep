module Steep
  module AST
    module Types
      class Tuple
        attr_reader types: Array[t]

        attr_reader location: RBS::Location[untyped, untyped]?

        def initialize: (types: Array[t], ?location: RBS::Location[untyped, untyped]?) -> void

        def ==: (untyped other) -> bool

        def hash: () -> Integer

        alias eql? ==

        def subst: (Interface::Substitution s) -> Tuple

        def to_s: () -> ::String

        def free_variables: () -> Set[Symbol]

        include Helper::ChildrenLevel

        def each_child: () { (t) -> void } -> void
                      | () -> Enumerator[t, void]

        def level: () -> untyped

        def with_location: (RBS::Location[untyped, untyped] new_location) -> Tuple
      end
    end
  end
end
