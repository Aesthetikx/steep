module Steep
  module Interface
    class Block
      attr_reader type: Function

      attr_reader optional: bool

      def initialize: (type: Function, optional: bool) -> void

      def optional?: () -> bool

      def required?: () -> bool

      def to_optional: () -> Block

      def ==: (untyped other) -> bool

      alias eql? ==

      def hash: () -> Integer

      def closed?: () -> bool

      def subst: (Substitution s) -> Block

      def free_variables: () -> Set[Symbol]

      def to_s: () -> ::String

      def map_type: () { (AST::Types::t) -> AST::Types::t } -> Block

      def +: (Block other) -> Block
    end
  end
end
